#!/usr/bin/python3
# -*- encoding: utf-8 -*-

from src.lib.obtenerForms import ObtenerForms
from fabrica.otg import OTG
import requests

__otg__ = "OTG-CLIENT-003"

class Client_003(OTG):
    def __init__(self, dependencia=None):
        super().__init__(dependencia, __otg__)
        self.urls = list()
        self.payload = "<h1>Prueba con titulo de HTML injection</h1>"
    
    def detectarVulnerabilidad(self, response, url):
        if self.payload in response.text:
            ini = response.text.find(self.payload)-120
            fin = response.text.find(self.payload)+120
            pedazo = ""
            i = ini
            while i < fin:
                pedazo += response.text[i]
                i += 1
            msj = "La URL: '{}' es vulnerable a inyección de componentes HTML.\nFragmento de la página afectada en HTML:\n{}".format(url, pedazo)
            print("===================\n{}\n===================\n".format(msj))
            self.adicionarResultado(msj)
    
    def realizarPeticionCamposEditables(self, forms, url):
        session = requests.Session()
        response = None
        for i in forms:
            newData = dict()
            for k,v in i.data.items():
                if v == "" or v == " ":
                    v = self.payload
                newData.update({k:v})
            if i.type == "post":
                response = session.post(i.url, data=newData)
            else:
                response = session.get(i.url, data=newData)
                            
            self.detectarVulnerabilidad(response, url)

    
    def main(self):
        print("================ Inicio prueba OTG-CLIENT-003 ==================\n")

        self.urls = self.obtenerResultado("OTG-INFO-007", self.pentest.id)
        of = ObtenerForms()
        forms = None
        for i in self.urls:
            if i == "":
                continue
            forms = of.get_forms(i)
            self.realizarPeticionCamposEditables(forms, i)
        
        if self.detalles.resultado != "":
            self.adicionarRecomendaciones("")
            self.adicionarRiesgo(0.0)

            self.almacenarBD()

        print("================ Fin prueba OTG-CLIENT-003 ==================\n")
