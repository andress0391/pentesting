# -*- coding: utf-8 -*-

import requests
import sys
import os
import subprocess
from subprocess import Popen, PIPE
from fabrica.otg import OTG


__otg__ = "OTG-INFO-005"
__keywords__ = ["user","username","password","pass","usuario","contraseña","ip","email","correo","sql","query","IP","@"]
lst_find = list()
entontro = True


class Info_005(OTG):

    '''
    Retorna el código fuente HTML de la URL en busca
    de informaicón sensible en los metadatos
   :parámetro url: dirección del sitio web a revisar
   '''


    def __init__(self,url, dependencia=None):
        super().__init__(dependencia, __otg__)
        self.url = url
        self.ruta = os.getcwd() + "/src/Salida/"

    def download(self, url):
        global lst_msg
        lst_msg = ""
        print("Revisando metadatos ...")
        r = requests.get(url)
        if r.status_code != 200:
            sys.stderr.write("!Error {} recuperando {} ".format(r.status_code, url))
            return None

        lst_msg += r.text
        print(lst_msg)
        # self.write_file()
        return r.text

    def comentarios(self, url):
        '''
        Descarga la el sitio web con el comando wget y busca
        los comentarios con la opción grep
        '''
        print("Analizando comentarios ...")
        print(url)
        
        lst_urls = self.obtenerResultado("OTG-INFO-007",self.pentest.id)
        tam = len(lst_urls)

        if tam != 0:
            for url in lst_urls:
                if url != "":
                    os.system("wget -q " + url + " -O page")
                    os.system('grep "<!-" page > output_tmp')

                    for key in __keywords__: 
                        if key == "ip" or key == "IP":
                            self.exactly_match(key)
                        else:
                            self.coincidence(key)

        self.find_comment()
        #self.delete_files()


    def exactly_match(self,key):
        stdout = Popen("grep -w -o -P " + key + " output_tmp", shell=True, stdout=PIPE).stdout
        output_tmp = stdout.read()
        output = str(output_tmp)  
        self.outcome_validate(output)
        #print(os.system("grep -w " + key + " output_tmp > tmp_exactly"))
        #print(os.system("grep -o -P '.{0,20}" + key + ".{0,20} tmp_exactly'"))
    
    
    def coincidence(self,key):
        #stdout = Popen('grep -i -o -P ".{0,20}"' + key + '".{0,20}" output_tmp', shell=True, stdout=PIPE).stdout
        stdout = Popen("grep -i -o -P '.{0,20}" + key + ".{0,20}' output_tmp", shell=True, stdout=PIPE).stdout

        output_tmp = stdout.read()
        output = str(output_tmp)        
        self.outcome_validate(output)

        #print(os.system("grep -i -o -P '.{0,20}" + key + ".{0,20}' output_tmp"))

    def delete_files(self):
        os.system("rm -r tmp_exactly page output_tmp")
    
    def outcome_validate(self,res):
        #print("resultado{}".format(res))
        tam = len(res)
        if tam > 20:
            self.adicionarResultado(res)
            lst_find.append(res)
            print(res)
    
    def find_comment(self):
        tam = len(lst_find)
        if tam == 0:
            print("No se han encontrado comentarios con información sensible en la aplicación")
        else:
            self.delete_files()



            

    def write_file(self, cadena):
        fwrite = "info-005-metadata.txt"
        f = open(fwrite, "w")
        f.write(cadena)
        f.write("\n")
        f.close

    def main(self):
        # url = "http://190.5.199.22:8082/RegistroSiag"
        print("================ Iniciando prueba OTG-INFO-005 ==================\n")
        self.comentarios(self.url)
        print("================ Fin prueba OTG-INFO-005 ==================\n")
        # r = self.download(url)
        # if r:
        #     sys.stdout.write(r[:200])
        #     self.write_file(r[:200])
            
        # else:
        #     msg_error = "No fue posible recuperar el sitio web\n"
        #     sys.stdout.write(msg_error)
        #     self.write_file(msg_error)

# obj  = Info_005()
# url = "http://www.unicauca.edu.co/versionP"
# obj.main(url)
            
