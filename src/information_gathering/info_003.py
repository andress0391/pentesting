# -*- coding: utf-8 -*-

import os
import subprocess
from subprocess import Popen, PIPE
from fabrica.otg import OTG

__otg__ = "OTG-INFO-003"

class INFO_003(OTG):
    

    def __init__(self, url,dependencia=None):
        super().__init__(dependencia, __otg__)
        self.url = url
        self.ruta = os.getcwd()
        
    
    
    def test_robots(self,url):
        stdout = Popen("wget -q %s%s %s" % (url,"robots.txt","-O robots.txt"), shell=True, stdout=PIPE).stdout
        

    def fiel_check(self):
        if os.stat("robots.txt").st_size == 0:
            print("No ha sido posible encontrar el archivo robots.txt en la raíz de la aplicación")


    def read_robots(self):
        res = ""
        with open (self.ruta + "/robots.txt") as file:
            for line in file:
                res += line
                #print(line)
            self.adicionarResultado(res)
            print(res)

    
    def delete_file(self):
        os.system("rm -r robots.txt")

    
    def main(self):
        # #url = "https://www.enmimaquinafunciona.com/"
        # #url = "http://www.vulnweb.com/"
        # url = "http://www.laxestereo.com/"
        # url = "http://www.unicauca.edu.co/versionP/"
        print("================ Iniciando prueba OTG-INFO-003 ==================\n")
        print("Detectando archivos para fuga de información ...\n")
        self.test_robots(self.url)
        self.fiel_check()
        self.read_robots()
        self.delete_file()
        if self.adicionarResultado !="":
            self.adicionarRecomendaciones("Existen otros “robots maliciosos” que suelen buscar direcciones de correos o formularios para "
            "hacer SPAM, que podrán acceder a los lugares que se haya prohibido si lo desean. Para "
            "bloquear estos otros robots, se debe ingresar al fichero .htaccess.")
            self.adicionarRecomendaciones("El archivo es público, lo que significa que cualquiera puede verlo con sólo teclear "
            +self.url+"robots.txt, por tanto, si se utiliza archivos robots.txt para esconder "
            "información privada, se debe utilizar un método más seguro como la protección con contraseña. ")
            self.adicionarRiesgo(4)
            self.almacenarBD()
        print("================ Terminando prueba OTG-INFO-003 ==================\n")
        
        
