# -*- coding: utf-8 -*-
import os
import subprocess
from subprocess import Popen, PIPE
from fabrica.otg import OTG

#OTG-BUSLOGIC-007-Test defenses against application
#A10

__otg__ = "OTG-BUSLOGIC-007"
encontro  = bool

class buslogic_007(OTG):

    def __init__(self, url, dependencia=None):
        super().__init__(dependencia,__otg__)
        self.url = url

    def detected_IDS(self,url):

        
        stdout = Popen('wafw00f ' + url + ' | grep behind', shell=True, stdout=PIPE).stdout
        tmp_res = stdout.read()
        output = str(tmp_res)
        if 'behind' in output:
            #os.system("nmap --script=http-waf-fingerprint --script-args http-waf-fingerprint.intensive=1 " + url + " > ids.txt")
            lst_res = output.split("behind a")
            res = lst_res[1]        
            if 'some' in res:
                cadena = "se ha detectado un WAF o alguna otra solución de seguridad"
                print(cadena)
                self.adicionarResultado(cadena)
                encontro = True
            else:
                cadena = "Se ha detectado un {} como mecanismo de defensa para el sitio {}".format(res,self.url)
                encontro = True
                print(cadena)
                self.adicionarResultado(cadena)
        else:
            encontro = False
            cadena = "No ha sido posbilbe detectar algún mecanismo de defensa en su aplicación"
            print(cadena)
            self.adicionarResultado(cadena)


    def main(self):
        print("================ Iniciando prueba OTG-BUSLOGIC-007 ==================\n")
        print("Identificando IDS/IPS/WAF/FIREWALL ...\n")
        #url = "www.cloudflare.com"
        #url = "www.nbcnews.com"
        #url = "betplay.com.co"
        #url = "wplay.co"
        #url = "simca.unicauca.edu.co"
        #url = "www.unimayor.edu.co"
        self.detected_IDS(self.url)
        if self.adicionarResultado != "":
            if encontro:
                recomendación1 = "Tenga en cuenta agregar retardos en cada ciclo de petición-respuesta para registrar datos adicionales sobre las interacciones del usuario como"
                "encabezados de solicitud HTTP\n."
                recomendación2  = "Considere los siguientes aspectos:\n"
                "*Bloquear peticiones maliciosas.\n" 
                "*Bloquear una cuenta temporalmente depués de una serie de fallos de autenticación.\n"
                "*Rechazar peticiones que contienene determinados caracteres.\n"
                self.adicionarRecomendaciones(recomendación1)
                self.adicionarRecomendaciones(recomendación2)
            else:
                recomendación3 = "La aplicación debe tener algún control de seguridad como un IDS, IPS, WAF o Firewall, para mitigar posibles ataques, con el fin de evitar perdida de información sensible y sean descubiertas vulnerabilidades críticas.\n"
                self.adicionarRecomendaciones(recomendación3)
                self.adicionarRecomendaciones(recomendación1)
                self.adicionarRecomendaciones(recomendación2)
            
            self.adicionarRiesgo(4)
            self.almacenarBD()
        print("================ Fin prueba OOTG-BUSLOGIC-007 ==================\n")

# obj = buslogic_007()
# obj.main()
