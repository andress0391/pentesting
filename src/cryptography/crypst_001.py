#!/usr/bin/python3
# -*- encoding: utf-8 -*-

import subprocess
import time
import threading
import os
from urllib.parse import urlparse

esperar = 0

class Crypst_001(object):
    def __init__(self, url):
        self.url = url
        self.testssl = "/src/cryptography/testssl/testssl.sh "
        self.salida = "/src/Salida/SSL_TLS.txt"

    def ejecutarTestSSL(self):
        global esperar
        with open(os.getcwd()+self.salida, "w") as f:
            subprocess.call([os.getcwd()+self.testssl+' --color 0 ' + self.url],
                            shell=True,
                            stdout=f,
                            stderr=subprocess.STDOUT)
            esperar = 1
        f.close()


    def examinarHTTPS(self):
        puertos = ""
        with open(os.getcwd()+"/src/Salida/info_010_pscan.txt", "r") as f:
            puertos = f.readlines()
        f.close()
        for x in puertos:
            if "https\n" in x:
                return 1
        return -1


    def main(self):
        global esperar
        print("================ Inicio prueba OTG-CRYPST-001 ==================\n")
        https = self.examinarHTTPS()
        if https == 1:
            u = urlparse(self.url)
            self.url = u.netloc
            # Ejecutar el subproceso
            hilo = threading.Thread(target=self.ejecutarTestSSL)
            hilo.start()
            # Mostrar mensaje de espera
            mensaje = "Ejecutando el análisis"
            suspension = "."
            print(mensaje, end="", flush=True)
            while esperar == 0:
                time.sleep(1)
                print(suspension, end="", flush=True)
            print("\nAnálisis finalizado!")
        else:
            print("EL servidor no tiene el puert 443 (https) disponible")
        print("================ Fin prueba OTG-CRYPST-001 ==================\n")

# Si no tiene disponible el puerto 443 para qué probar
# main("http://190.5.199.22:8082")
