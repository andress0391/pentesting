#!/usr/bin/python3
# -*- encoding: utf-8 -*-

import subprocess
import time
import os
from urllib.parse import urlparse
from multiprocessing import Process
from fabrica.otg import OTG

class Crypst_001(OTG):
    def __init__(self, url, dependencia=None):
        super().__init__(dependencia)
        self.url = url
        self.testssl = "/src/cryptography/testssl/testssl.sh "
        self.salida = "/src/Salida/SSL_TLS.txt"
        self.complejidad = 2

    def ejecutarTestSSL(self):
        with open(os.getcwd()+self.salida, "w+") as f:
            subprocess.call([os.getcwd()+self.testssl+' --color 0 ' + self.url],
                            shell=True,
                            stdout=f,
                            stderr=subprocess.STDOUT)
        f.close()


    def examinarHTTPS(self):
        import socket
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        try:
            s.connect((self.url, 443))
            s.shutdown(2)
            return True
        except:
            return False


    def main(self):
        print("================ Inicio prueba OTG-CRYPST-001 ==================\n")
        https = self.examinarHTTPS()
        if https is True:
            # Ejecutar el subproceso
            p = Process(target=self.ejecutarTestSSL)
            p.start()
            # Mostrar mensaje de espera
            mensaje = "Ejecutando el análisis CRYPST-001"
            print(mensaje)
            p.join()
            print("\nAnálisis finalizado!")
        else:
            print("EL servidor no tiene el puert 443 (https) disponible")
        print("================ Fin prueba OTG-CRYPST-001 ==================\n")

# ENVIAR IP NO URL
#c = Crypst_001("10.200.1.16")
#c.main()
