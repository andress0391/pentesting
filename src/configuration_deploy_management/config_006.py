#!/usr/bin/python3
# -*- encoding: utf-8 -*-

import requests
from fabrica.config import Config

class Config_006(Config):
    def __init__(self, url):
        self.metodosArbitratios = ['JEFF', 'CATS', 'FOOBAR', 'PROPFIND']
        self.url = url
        self.complejidad = 1

    def obtenerMetHTTP(self):
        '''
        Obtiene los métodos HTTP que permite el servidor
        '''
        r = requests.options(self.url)
        if 'Allow' not in r.headers:
            print("No es posible detectar los métodos HTTP permitidos por el servidor web")
            r.close()
            return -1
        else:
            metodosDisponibles = r.headers['Allow'].split(", ")
            print("Métodos disponibles: %s" % metodosDisponibles)
            r.close()
            return metodosDisponibles

    def vulnerableXST(self, metodosDisponibles):
        '''
        Si el servidor permite el método TRACE, se verifica si es vulnerable a XST
        '''
        if "TRACE" in metodosDisponibles:
            payload = ["TRACE", "Host", self.url]
            print("Enviando petición: TRACE / HTTP/1.1")
            r = requests.request(
                method=payload[0],
                url=payload[2],
                params={payload[1]: payload[2]})

            if r.status_code in [400, 404, 405, 406, 501]:
                return -1
            else:
                datos = r.text.lower()
                if payload[1].lower() in datos:
                    return 1
                else:
                    return -1
        else:
            return -1

    def pruebaMetArbitrarios(self):
        '''
        Enviar peticiones con métodos arbitrarios
        '''
        vulnerable = 0
        for i in self.metodosArbitratios:
            r = requests.request(
                method=i,
                url=self.url)
            print("Enviando petición: %s / HTTP/1.1\nRespuesta: %s" % (i, r.status_code))
            if r.status_code not in [400, 404, 405, 406, 501]:
                print("Vulnerable a peticiones con métodos '%s' arbitrarios" % i)
                vulnerable = 1
        if vulnerable != 1:
            print("No vulnerable a peticiones con métodos arbitrarios\n")


    def main(self):
        print("================ Inicio prueba OTG-CONFIG-006 ==================\n")
        xst = -1
        metodosDisponibles = self.obtenerMetHTTP()
        if metodosDisponibles != -1:
            xst = self.vulnerableXST(metodosDisponibles)
        if xst == 1:
            print("Vulnerable a Cross-Site Tracing (XST)\n")
        elif xst == -1:
            print("No vulnerable a Cross-Site Tracing (XST)\n")
        self.pruebaMetArbitrarios()
        print("================ Fin prueba OTG-CONFIG-006 ==================\n")

#a = Config_006("https://simca.unicauca.edu.co/simca/")
#a.main()
