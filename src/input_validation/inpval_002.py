#!/usr/bin/python3
# -*- encoding: utf-8 -*-

from src.lib.obtenerForms import ObtenerForms
from fabrica.otg import OTG
import requests

__otg__ = "OTG-INPVAL-002"

class Inpval_002(OTG):
    def __init__(self, dependencia=None, riesgoNegocio=0.0):
        super().__init__(dependencia, __otg__, riesgoNegocio)
        self.urls = list()
        self.payload = "<a aa aaa aaaa aaaaa aaaaaa aaaaaaa aaaaaaaa aaaaaaaaa aaaaaaaaaa href=j&#97v&#97script:&#97lert(1)>ClickMe"

    def detectarVulnerabilidad(self, respuesta, form, url):
        if self.payload in respuesta.text:
            ini = respuesta.text.find(self.payload)-150
            fin = respuesta.text.find(self.payload)+150
            pedazo = ""
            i = ini
            while i < fin:
                pedazo += respuesta.text[i]
                i += 1
            msj = "La url '{}' por medio del formulario con acción: '{}' es vulnerable a Cross-Site Scripting (XSS).\nEl payload utilizado para esta prueba fue: '{}'\nFragmento de HTML afectado:\n{}".format(url,form.url, self.payload, pedazo)
            print(msj)
            self.adicionarResultado(msj)
    
    def procesarPeticion(self, forms, url):
        session = requests.Session()
        for i in forms:
            newData = dict()
            for k,v in i.data.items():
                if v == "" or v == " ":
                    v = self.payload
                newData.update({k:v})
            if i.type == "post":
                response = session.post(i.url, data=newData)
            else:
                response = session.get(i.url, data=newData)

            self.detectarVulnerabilidad(response, i, url)

    
    def main(self):
        print("================ Inicio prueba OTG-INPVAL-002 ==================\n")
        self.urls = self.obtenerResultado("OTG-INFO-007", self.pentest.id)

        of = ObtenerForms()
        forms = None
        for i in self.urls:
            if i == "":
                continue
            forms = of.get_forms(i)
            self.procesarPeticion(forms, i)
        if self.detalles.resultado != "":
            self.adicionarRecomendaciones("")
            self.calcularRiesgo(__otg__, self.riesgoNegocio)

            self.almacenarBD()
        else:
            print("No se encontró vulnerbilidad XSS")

        print("================ Fin prueba OTG-INPVAL-002 ==================\n")
        