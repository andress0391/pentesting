import requests
import os
from fabrica.otg import OTG


__otg__ = "OTG-INPVAL-001"

class Invpal_001(OTG):

    def __init__(self, url,dependencia=None):
        super().__init__(dependencia, __otg__)
        self.url = url
        self.ruta = os.getcwd() + "/src/input_validation/Input_validation_testing/payloads/"
    
    def query_crawler(self):
        urls = self.obtenerResultado("OTG-INFO-007",self.pentest.id)
        return urls

    def xss_reflejado(self,url):
        
        global lst_msg
        fname = "payload_xss.txt"
        urls = self.query_crawler()
        
        with open(self.ruta + fname) as f:
            content = f.readlines()        

        payloads = [x.strip() for x in content]
        lst_msg = []
        lst_not_vuln = []
        
        vuln = []
        for url in urls:
        
            for payload in payloads:                           
                if url[-1] != "/":
                    url = url + "/"                    
                else:                    
                    xss_url = url + payload                    
                    lst_msg.append(xss_url)                    
                    r = requests.get(xss_url)
                    if payload.lower() in r.text.lower():
                        resultado = "Vulnerable!!!\n{}\nURL: {}\nPAYLOAD: {}".format(xss_url,url,payload)
                        print(resultado)                    
                        print("-------------------------------------------------------------------------------")
                        self.adicionarResultado(resultado)
                        if(payload not in vuln):
                            vuln.append(payload)
                            lst_msg.append("Vulneralbe" + payload)

                    else:
                        msg_not_vuln = "No vulnerable!"
                        lst_not_vuln.append(msg_not_vuln)
                        print(msg_not_vuln)
                        print(xss_url)
                        print("-------------------------------------------------------------------------------")

            #self.write_file()
        

    def write_file(self):
        salida  = os.getcwd() + "/src/Salida/"
        fwrite = "inpval-001-xss.txt"

        f = open(salida + fwrite, "a")
        for cadena in lst_msg:
            f.write(cadena)
            f.write("\n")
        f.close()

    def main(self):
        # url="https://www.peabody.harvard.edu/"
        # url = "https://code.visualstudio.com/docs/?dv="
        # url = "http://190.5.199.22:8082/RegistroSiag/"        
        print("================ Iniciando prueba OTG-INPVAL-001 ==================\n")
        self.xss_reflejado(self.url)
        print("================ Fin prueba OTG-INPVAL-001 ==================\n")
        if self.detalles.resultado !="":
            self.adicionarRecomendaciones("filtre los datos de entrada que introduce el usuario en los diferentes campos de texto, verifique que no lleven etiquetas no deseadas o sanitice las entradas")
            self.adicionarRecomendaciones("Realice una lista blanca (una lista de entradas permitidas que puede introducir el usuario)")
            self.adicionarRiesgo(7.0)
            self.almacenarBD()

        # print('\n'.join(vuln))

# objxss = Invpal_001()
# objxss.main()
