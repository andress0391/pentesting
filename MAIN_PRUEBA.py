#!/usr/bin/python3
# -*- encoding: utf-8 -*-

from mpi4py import MPI
import os
import argparse

from FACADE import Facade

path = os.path.dirname(os.path.realpath(__file__))

comm = MPI.COMM_WORLD
rank = comm.rank
size = comm.size
name = MPI.Get_processor_name()

parser = argparse.ArgumentParser()
parser.add_argument("--pruebas", help="display a square of a given number",type=str)
parser.add_argument("--url", help="URL del sitio. Ej: http://www.example.com",type=str)
parser.add_argument("--login", help="URL del sitio. Ej: http://www.example.com/login.html",type=str)
parser.add_argument("--usuario", help="Usuario de prueba. Ej: usuario1,password1",type=str)

'''
args = parser.parse_args()
url = args.url
login = args.login
up = args.usuario
pruebas = args.pruebas

f = Facade(url, pruebas, login, up, 1)
procesos = f.repartir()

# Ejecutar todos los procesos
for i in procesos:
    for j in i:
        j.main()
'''

# RANK 0
if rank == 0:
    args = parser.parse_args()
    
    url = args.url
    login = args.login
    up = args.usuario
    pruebas = args.pruebas
    
    f = Facade(url, pruebas, login, up, size)
    procesos = f.repartir()

    r1 = procesos[1]
    r2 = procesos[2]
    r3 = procesos[3]
    r4 = procesos[4]
    comm.send(r1,dest=1, tag=1)
    comm.send(r2,dest=2, tag=2)
    comm.send(r3,dest=3, tag=3)
    comm.send(r4,dest=4, tag=4)

    r0 = procesos[0]
    for i in r0:
        i.main()
elif rank == 1:
    data = comm.recv(source=0,tag=1)
    for i in data:
        i.main()
elif rank == 2:
    data = comm.recv(source=0,tag=2)
    for i in data:
        i.main()
elif rank == 3:
    data = comm.recv(source=0,tag=3)
    for i in data:
        i.main()
elif rank == 4:
    data = comm.recv(source=0,tag=4)
    for i in data:
        i.main()
