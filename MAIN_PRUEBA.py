#!/usr/bin/python3
# -*- encoding: utf-8 -*-

#from mpi4py import MPI
import os
import argparse

from FACADE import Facade

path = os.path.dirname(os.path.realpath(__file__))

'''
comm = MPI.COMM_WORLD
rank = comm.rank
size = comm.size
name = MPI.Get_processor_name()
'''

parser = argparse.ArgumentParser()
parser.add_argument("--pruebas", help="display a square of a given number",type=str)
parser.add_argument("--url", help="URL del sitio. Ej: http://www.example.com",type=str)
parser.add_argument("--login", help="URL del sitio. Ej: http://www.example.com/login.html",type=str)
parser.add_argument("--usuario", help="Usuario de prueba. Ej: usuario1,password1",type=str)

args = parser.parse_args()
url = args.url
login = args.login
up = args.usuario
pruebas = args.pruebas

f = Facade(url, pruebas, login, up, 1)
procesos = f.repartir()

for i in procesos:
    for j in i:
        j.main()

'''
# RANK 0
if rank == 0:
    args = parser.parse_args()
    
    url = args.url
    login = args.login
    up = args.usuario
    pruebas = args.pruebas
    
    f = Facade(url, pruebas, login, up, size)
    procesos = f.repartir()

    dest = 1
    for p in procesos:
        pass
elif rank == 1:
    pass
elif rank == 2:
    pass
elif rank == 3:
    pass
'''
