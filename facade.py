# usr/bin/env
# -*- coding: utf-8 -*-


import sys
from info_010 import Info
from domine import Dominio
from info_005 import Info_005
from config_001 import Config_001
#from folder_info_007.info_007 import Info_007
sys.path.append("./folder_info_007")
sys.path.append("./SQL_XSS")
from info_007 import Info_007
from sql import Invpal_005
from xss import Invpal_001
from oracle import Invpal_005_Oracle
from sql_server import Invpal_005_Sql_Server
from postgresql import Invpal_005_PostgreSQL
from invpal_006_ldap import Invpal_006
from invpal_012_injec_code import Invpal_012
from invpal_013_com_inject import Invpal_013



class Facade:
	"""Controlador de PoC"""

	def __init__(self,url):
		self.url = url
		self.obj_domine = Dominio(self.url)
		self.obj_nmap = Info()
		self.obj_info_007 = Info_007()
		self.obj_invpal_005 = Invpal_005()
		self.obj_invpal_001 = Invpal_001()
		self.obj_info_005 = Info_005()
		self.obj_config_001 = Config_001()
		self.obj_oracle = Invpal_005_Oracle()
		self.obj_sqlserver = Invpal_005_Sql_Server()
		self.obj_postgresql = Invpal_005_PostgreSQL()
		self.obj_ldap = Invpal_006()
		self.obj_injec_code = Invpal_012()
		self.obj_com_inject = Invpal_013()
		#self.dir_ip = self.obj_domine.obtener_dir_ip()

	def get_ip(self):
		"""Obtener la direccion IP de la URL o dominio"""
		global dir_ip 
		dir_ip = self.obj_domine.obtener_dir_ip()
		print("La dirección IP es : " + dir_ip)

	def port_scan(self):
		"Escanear  puertos del target para OTG-INFO-010"
		#print("-----PORT SCANING-----")
		self.obj_nmap.scanner(dir_ip)

	def crawling(self):
		"""Spidering del sitio web para OTG-INFO-007"""
		print("-----SPIDERING------")
		self.obj_info_007.spidering(self.url)

	def sql(self):
		"""Sql injection para OTG-INVPAL-005"""
		print("-----SQL INJECTION------")
		print("-----Injection MySQL------")
		self.obj_invpal_005.sql_injection(self.url)

	def oracle(self):
		"""Oracle injection para OTG-INVPAL-005"""
		print("-----Injection Oracle------")
		self.obj_oracle.oracle_injection(self.url)

	def sqlserver(self):
		"""Sql-Server injection para OTG-INVPAL-005"""
		print("-----Injection SQL-SERVER------")
		self.obj_sqlserver.sqlserver_injection(self.url)

	def postgresql(self):
		"""PostgreSQL injection para OTG-INVPAL-005"""
		print("-----Injection PostgreSQL------")
		self.obj_postgresql.postgresql_injection(self.url)

	def ldap(self):
		"""LDAP injection para OTG-INVPAL-006"""
		print("-----Injection LDAP------")
		self.obj_ldap.ldap_injection(self.url)

	def inject_code(self):
		"""Injection code para OTG-INVPAL-012"""
		print("-----Injection code------")
		self.obj_injec_code.code_injection(self.url)

	def inject_command(self):
		"""Injection command para OTG-INVPAL-013"""
		print("-----Injection command------")
		self.obj_com_inject.command_injection(self.url)

	def xss(self):
		"""XSS cross site scripting para OTG-INVPAL-001"""
		print("-----CROSS SITE SCRIPTING------")
		self.obj_invpal_001.xss_reflejado(self.url)

	def metadata(self):
		"""Revisa los comentarios y metadatos para OTG-INFO-005"""
		self.obj_info_005.main(self.url)

	def test_network(self):
		"""Analiza servidores web, versión, S.O para OTG-CONFIG-001, OTG-INFO-002,008,009"""
		self.obj_config_001.network(dir_ip)

		
		

		

	def main(self):
		cont = Facade(self.url)
		print("-----RECOPILACIÓN DE INFORMACIÓN-----")
		cont.get_ip()
		cont.port_scan()
		cont.crawling()
		cont.sql()
		cont.xss()
		cont.metadata()
		cont.test_network()
		cont.oracle()
		cont.sqlserver()
		cont.postgresql()
		cont.ldap()
		cont.inject_code()
		cont.inject_command()


#if __name__ == '__main__':
#	main()


