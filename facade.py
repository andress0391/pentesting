# usr/bin/env
# -*- coding: utf-8 -*-


import os
from config_006 import main as mc6
from config_007 import main as mc7
from info_010 import Info
from dominio import Dominio
from info_005 import Info_005
from config_001 import Config_001
from SQL_XSS.oracle import Invpal_005_Oracle
from SQL_XSS.sql_server import Invpal_005_Sql_Server
from SQL_XSS.postgresql import Invpal_005_PostgreSQL
from SQL_XSS.invpal_006_ldap import Invpal_006
from SQL_XSS.invpal_012_injec_code import Invpal_012
from SQL_XSS.invpal_013_com_inject import Invpal_013
from folder_info_007.info_007 import Info_007
from SQL_XSS.sql import Invpal_005
from SQL_XSS.xss import Invpal_001
#from FuerzaBruta_Directorio.authz_002 import main as maz2
#from FuerzaBruta_LogIn.authn_003 import main as man3
#from Criptografia.crypst_001 import main as mct1


dir_ip = ""


class Facade:
	"""Controlador de PoC"""



	def __init__(self, args):

		self.args = args
		self.url = self.args.dominio
		self.obj_domine = Dominio(self.url)
		self.obj_nmap = Info()
		self.obj_info_005 = Info_005()
		self.obj_info_007 = Info_007()
		self.obj_invpal_005 = Invpal_005()
		self.obj_invpal_001 = Invpal_001()
		self.obj_config_001 = Config_001()
		self.obj_oracle = Invpal_005_Oracle()
		self.obj_sqlserver = Invpal_005_Sql_Server()
		self.obj_postgresql = Invpal_005_PostgreSQL()
		self.obj_ldap = Invpal_006()
		self.obj_injec_code = Invpal_012()
		self.obj_com_inject = Invpal_013()
		if os.path.exists("Salida") is False:
			os.makedirs("Salida")


	def get_ip(self):
		
		"""Obtener la direccion IP de la URL o dominio"""
		global dir_ip
		dir_ip = self.obj_domine.obtener_dir_ip()
		print("La dirección IP es : " + dir_ip)

	def port_scan(self):
		"Escanear  puertos del target para OTG-INFO-010"
		# print("-----PORT SCANING-----")
		self.obj_nmap.scanner(dir_ip)

	def crawling(self):
		"""
		Spidering del sitio web para OTG-INFO-007
		"""
		print("-----SPIDERING------")
		self.obj_info_007.spidering(self.url)

	def sql(self):
		"""Sql injection para OTG-INVPAL-005"""
		print("-----Injection MySQL------")
		self.obj_invpal_005.sql_injection(self.url)

	def oracle(self):
		"""Oracle injection para OTG-INVPAL-005"""
		print("-----Injection Oracle------")
		self.obj_oracle.oracle_injection(self.url)

	def sqlserver(self):
		"""Sql-Server injection para OTG-INVPAL-005"""
		print("-----Injection SQL-SERVER------")
		self.obj_sqlserver.sqlserver_injection(self.url)

	def postgresql(self):
		"""PostgreSQL injection para OTG-INVPAL-005"""
		print("-----Injection PostgreSQL------")
		self.obj_postgresql.postgresql_injection(self.url)

	def ldap(self):
		"""LDAP injection para OTG-INVPAL-006"""
		print("-----Injection LDAP------")
		self.obj_ldap.ldap_injection(self.url)

	def inject_code(self):
		"""Injection code para OTG-INVPAL-012"""
		print("-----Injection code------")
		self.obj_injec_code.code_injection(self.url)

	def inject_command(self):
		"""Injection command para OTG-INVPAL-013"""
		print("-----Injection command------")
		self.obj_com_inject.command_injection(self.url)

	def xss(self):
		"""XSS cross site scripting para OTG-INVPAL-001"""
		print("-----CROSS SITE SCRIPTING------")
		self.obj_invpal_001.xss_reflejado(self.url)


	def config_006(self):
		mc6(self.url)

	def config_007(self):
		mc7(self.url)

	def authz_002(self):
		maz2(self.url)

	def authn_003(self, url):
		os.chdir("FuerzaBruta_LogIn")
		man3(url)
		os.chdir("..")

	def crypst_001(self):
		os.chdir("Criptografia")
		mct1(self.url)
		os.chdir("..")

	def metadata(self):
		"""Revisa los comentarios y metadatos para OTG-INFO-005"""
		self.obj_info_005.main(self.url)

	def test_network(self):
		"""Analiza servidores web, versión, S.O para OTG-CONFIG-001, OTG-INFO-002,008,009"""
		self.obj_config_001.network(dir_ip)

	def main(self):
		print("-----RECOPILACIÓN DE INFORMACIÓN-----")
		self.get_ip()		
		self.port_scan()
		self.crawling()		
		self.metadata()
		self.config_006()
		self.config_007()
		if self.args.fuerza_bruta_login:
			self.authn_003(self.args.fuerza_bruta_login)
		self.crypst_001()
		self.authz_002()
		self.xss()
		self.sql()
		self.inject_command()
		self.inject_code()
		self.postgresql()
		self.sqlserver()
		self.ldap()
		self.oracle()
		self.test_network()
		
		

		

