#!/usr/bin/python3
# -*- encoding: utf-8 -*-

from abc import ABCMeta, abstractmethod
from src.modelo.detalle import Detalle
from src.modelo.prueba import Prueba
from src.modelo.pentest import Pentest

class OTG(metaclass=ABCMeta):
    def __init__(self, dependencia, otg):
        p = Prueba().getByCodigo(otg)
        pentest = Pentest()
        self.detalles = Detalle(id_pentest=pentest.id, id_prueba=p.id)
        #self.detalles = Detalle(id_pentest=0, id_prueba=0)
        self.dependencia = dependencia
    
    @abstractmethod
    def main(self):
        raise NotImplementedError
    
    def adicionarRecomendaciones(self, recomendaciones):
        self.detalles.recomendacion = recomendaciones

    def adicionarRiesgo(self, riesgo):
        self.detalles.riesgo = riesgo
    
    def adicionarResultado(self, res):
        self.detalles.resultado += res + "\n"
    
    def almacenarBD(self):
        self.detalles.insert(self.detalles)
