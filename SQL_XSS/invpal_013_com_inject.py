import requests
import os


class Invpal_013:

    def __init__(self):
        """COMMAND CODE"""
        print("")

    def command_injection(self,url):
        #url = input("URL:")
        global lst_msg 
        os.chdir("SQL_XSS")
        fname = "payload_inpval_013.txt"
        with open(fname) as f:
            content = f.readlines()    
        payloads = [x.strip() for x in content]
        #return payloads

        lst_msg = []   
        vuln = []
        #payloads=self.loadPayload()
        for payload in payloads:
            payload = payload
            if url[-1] != "/":
                url = url + "/"
            else:
                xss_url = url+payload
                lst_msg.append(xss_url)
                print(xss_url)
                r = requests.get(xss_url)
                if payload.lower() in r.text.lower():
                    print("Vulnerable: " + payload)
                    if(payload not in vuln):
                        vuln.append(payload)
                        lst_msg.appen("Vulneralbe" + payload)
                else:
                    msg_not_vuln = "Not vulnerable!"
                    lst_msg.append(msg_not_vuln)
                    print(msg_not_vuln)

        self.write_file()
        
        
    def write_file(self):

        fwrite = "invpal-012-command-code.txt"
        f = open(fwrite,"a")
        for cadena in lst_msg:
            f.write(cadena)
            f.write("\n")
            f.close


    def main(self):
        #url="https://www.peabody.harvard.edu/"
        #url = "https://code.visualstudio.com/docs/?dv="
        #url = "http://190.5.199.22:8082/RegistroSiag/"
        self.xss_reflejado(url)
        print("--------------------\nAvailable Payloads:")
        #print('\n'.join(vuln))

#objxss = Invpal_001()
#objxss.main()
