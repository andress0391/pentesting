#!/usr/bin/python3
# -*- encoding: utf-8 -*-

class Balancear(object):
    def __init__(self, cpus, procesos=list()):
        self.cpus = cpus
        self.procesos = procesos
        self.resultado = list()

    def main(self):
        # Se ordenan de mayor a menor
        self.procesos.sort(reverse=False, key=lambda p: p.complejidad)
        tareas = len(self.procesos)
        # Se determina la cantidad de tareas por cpu
        tamBloque = round(tareas/self.cpus)+1

        self.generarBloques()
        self.distribuirProcesos(self.procesos, tamBloque)
    
    def imprimir(self, lista):
        for x in lista:
            print(x.complejidad)
        print("------")
    
    def importarProcesos(self, procesos=None):
        return procesos

    def generarBloques(self):
        for c in range(self.cpus):
            self.resultado.append(list())

    def distribuirProcesos(self, procesos, tamBloque):
        i = 0
        for p in procesos:
            if len(self.resultado[i]) <= tamBloque:
                self.resultado[i].append(p)
            i += 1
            i = i%self.cpus

#b = Balancear(3)
#b.main()
