#!/usr/bin/python3
# -*- encoding: utf-8 -*-

import os
import argparse
import time

from mpi4py import MPI
from FACADE import Facade

path = os.path.dirname(os.path.realpath(__file__))

comm = MPI.COMM_WORLD
rank = comm.rank
size = comm.size
name = MPI.Get_processor_name()

parser = argparse.ArgumentParser()
parser.add_argument("--pruebas", help="display a square of a given number",type=str)
parser.add_argument("--url", help="URL del sitio. Ej: http://www.example.com",type=str)
parser.add_argument("--login", help="URL del sitio. Ej: http://www.example.com/login.html",type=str)
parser.add_argument("--usuario", help="Usuario de prueba. Ej: usuario1,password1",type=str)
parser.add_argument("--id_pentest", help="Usuario de prueba. Ej: usuario1,password1",type=int)

args = parser.parse_args()
    
url = args.url
login = args.login
up = args.usuario
pruebas = args.pruebas
id_pentest = args.id_pentest

f = Facade(url, pruebas, login, up, size)

t_ini = None
resultado = list()
newData = list()

'''
Realizar el pentest desde la interfaz gráfica.
Se crea un pentest vacío, luego se busca por el 'id' del pentest y se obtienen los datos correspondientes.
'''
# SOLO PARA INFO
if rank == 0:
    f.crearPentest2(id_pentest)
    t_ini = time.time()
    info = f.obtenerInfo()

else:
    info = None

info = comm.scatter(info, root=0)

f.obtenerPentest2(id_pentest)

resultado = f.ejecutar(info)

newData = comm.gather(resultado, root=0)

# LOS DEMÁS PROCESOS
if rank == 0:
    procesos = f.repartir()
else:
    procesos = None

procesos = comm.scatter(procesos, root=0)

resultado = f.ejecutar(procesos)

newData = comm.gather(resultado, root=0)

if rank == 0:
    t_fin = (time.time() - t_ini)/60
    print("Tiempo total: %s" % t_fin)
    
"""
'''
Realizar el pentest desde la consola.
Se crea un pentest y se inserta en la base de datos para ser ejecutado al instante.
'''
else:
    procesos = None

procesos = comm.scatter(procesos, root=0)

print("Rank {} tiene:{}".format(rank, procesos))

resultado = list()
for i in procesos:
    resultado.append(i.main())
    #i.main()

newData = comm.gather(resultado, root=0)

if rank == 0:
    t_fin = (time.time() - t_ini)
    print("Tiempo total: %s" % t_fin)

"""
